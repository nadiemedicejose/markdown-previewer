{"version":3,"sources":["components/Toolbar.js","components/Editor.js","components/Preview.js","App.js","data/placeholder.js","index.js"],"names":["Toolbar","props","className","text","Editor","title","id","onChange","type","value","markdown","marked","require","Preview","setOptions","breaks","renderer","Renderer","link","href","dangerouslySetInnerHTML","__html","App","useState","setMarkdown","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEe,SAASA,EAAQC,GAC9B,OACE,qBAAKC,UAAU,UAAf,SACGD,EAAME,OCFE,SAASC,EAAOH,GAC7B,OACE,sBAAKC,UAAU,QAAf,UACE,cAACF,EAAD,CAASG,KAAMF,EAAMI,QACrB,qBAAKH,UAAU,kBAAf,SACE,0BACEI,GAAG,SACHC,SAAUN,EAAMM,SAChBC,KAAK,OACLC,MAAOR,EAAMS,gBCVvB,IAAMC,EAASC,EAAQ,IAER,SAASC,EAAQZ,GAE9BU,EAAOG,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIL,EAAOM,SAK5B,OAJAD,EAASE,KAAO,SAASC,EAAMd,EAAOF,GACpC,MAAM,4BAAN,OAAmCgB,EAAnC,aAA4ChB,EAA5C,SAIA,sBAAKD,UAAU,QAAf,UACE,cAACF,EAAD,CAASG,KAAMF,EAAMI,QACrB,qBAAKH,UAAU,kBAAf,SACE,qBACEI,GAAG,UACHc,wBAAyB,CACvBC,OAAQV,EAAOV,EAAMS,SAAU,CAAEM,SAAUA,Y,MCjBxC,SAASM,IACtB,MAAgCC,mBCPV,0kCDOtB,mBAAOb,EAAP,KAAiBc,EAAjB,KAMA,OACE,sBAAKtB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAACE,EAAD,CACEC,MAAS,SACTK,SAAYA,EACZH,SAVa,SAACkB,GACpBD,EAAYC,EAAEC,OAAOjB,UAWjB,cAACI,EAAD,CACER,MAAS,UACTK,SAAYA,OAIhB,iCACE,0DAA4B,uBAAS,mBAAGS,KAAK,kCAAR,0BAArC,qBExBRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42de34df.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Toolbar(props) {\r\n  return (\r\n    <div className='toolbar'>\r\n      {props.text}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Toolbar from './Toolbar'\r\n\r\nexport default function Editor(props) {\r\n  return (\r\n    <div className='panel'>\r\n      <Toolbar text={props.title} />\r\n      <div className='panel-container'>\r\n        <textarea\r\n          id='editor'\r\n          onChange={props.onChange}\r\n          type='text'\r\n          value={props.markdown}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Toolbar from './Toolbar'\r\nconst marked = require('marked')\r\n\r\nexport default function Preview(props) {\r\n  // Allows line breaks with return button\r\n  marked.setOptions({\r\n    breaks: true\r\n  });\r\n\r\n  // Inserts target=\"_blank\" into 'href' tags\r\n  const renderer = new marked.Renderer();\r\n  renderer.link = function(href, title, text) {\r\n    return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\r\n  };\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <Toolbar text={props.title} />\r\n      <div className='panel-container'>\r\n        <div\r\n          id='preview'\r\n          dangerouslySetInnerHTML={{\r\n            __html: marked(props.markdown, { renderer: renderer })\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Editor from './components/Editor'\r\nimport Preview from './components/Preview'\r\nimport { placeholder } from './data/placeholder'\r\nimport './styles/App.scss'\r\n\r\nexport default function App() {\r\n  const [markdown, setMarkdown] = useState(placeholder)\r\n\r\n  const handleChange = (e) => {\r\n    setMarkdown(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='container'>\r\n        <Editor\r\n          title = {'Editor'}\r\n          markdown = {markdown}\r\n          onChange = {handleChange}\r\n        />\r\n        <Preview\r\n          title = {'Preview'}\r\n          markdown = {markdown}\r\n        />\r\n      </div>\r\n\r\n      <footer>\r\n        <p>Designed and developed by<br></br><a href=\"https://nadiemedicejose.web.app\">Jose Estrada</a> &copy; 2021</p>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n","export const placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nthis.setState(state => ({\r\n  seconds: state.seconds + 1\r\n}));\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://www.import.io/wp-content/uploads/2017/10/React-logo.png)\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}