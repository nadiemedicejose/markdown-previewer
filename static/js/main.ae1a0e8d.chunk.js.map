{"version":3,"sources":["components/Toolbar.js","components/Editor.js","components/Preview.js","App.js","index.js"],"names":["Toolbar","className","title","this","props","text","icon","onClick","Component","Editor","id","onChange","type","value","markdown","marked","require","Preview","setOptions","breaks","renderer","Renderer","link","href","dangerouslySetInnerHTML","__html","App","state","placeholder","editorMaximized","previewMaximized","handleChange","bind","handleEditorMaximize","handlePreviewMaximize","e","setState","target","classes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAGqBA,E,4JAOnB,WACE,OACE,sBAAKC,UAAU,UAAf,UACE,mBAAGA,UAAU,uBAAuBC,MAAM,sBACzCC,KAAKC,MAAMC,KACZ,mBAAGJ,UAAWE,KAAKC,MAAME,KAAMC,QAASJ,KAAKC,MAAMG,iB,GAZtBC,aCDhBC,E,4JACnB,WACE,OACE,0BACEC,GAAG,SACHC,SAAUR,KAAKC,MAAMO,SACrBC,KAAK,OACLC,MAAOV,KAAKC,MAAMU,e,GAPUN,aCD9BO,EAASC,EAAQ,IAEFC,E,4JACnB,WAEEF,EAAOG,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIL,EAAOM,SAK5B,OAJAD,EAASE,KAAO,SAASC,EAAMrB,EAAOG,GACpC,MAAM,4BAAN,OAAmCkB,EAAnC,aAA4ClB,EAA5C,SAIA,qBACEmB,wBAAyB,CACvBC,OAAQV,EAAOZ,KAAKC,MAAMU,SAAU,CAAEM,SAAUA,KAElDV,GAAG,gB,GAlB0BF,aCGhBkB,G,wDACnB,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACXb,SAAUc,EACVC,iBAAiB,EACjBC,kBAAkB,GAGpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAXZ,E,gDAcnB,SAAaG,GACXhC,KAAKiC,SAAS,CACZtB,SAAUqB,EAAEE,OAAOxB,U,kCAIvB,WACEV,KAAKiC,SAAS,CACZP,iBAAkB1B,KAAKwB,MAAME,oB,mCAIjC,WACE1B,KAAKiC,SAAS,CACZN,kBAAmB3B,KAAKwB,MAAMG,qB,oBAIlC,WACE,IAAMQ,EAAUnC,KAAKwB,MAAME,gBACvB,CAAC,uBAAwB,mBAAoB,kBAC7C1B,KAAKwB,MAAMG,iBACT,CAAC,kBAAmB,wBAAyB,kBAC7C,CAAC,aAAc,cAAe,oBAEpC,OACE,gCACE,sBAAK7B,UAAWqC,EAAQ,GAAxB,UACE,cAAC,EAAD,CACEhC,KAAMgC,EAAQ,GACd/B,QAASJ,KAAK8B,qBACd5B,KAAK,WAEP,cAAC,EAAD,CAAQS,SAAUX,KAAKwB,MAAMb,SAAUH,SAAUR,KAAK4B,kBAExD,qBAAK9B,UAAU,cACf,sBAAKA,UAAWqC,EAAQ,GAAxB,UACE,cAAC,EAAD,CACEhC,KAAMgC,EAAQ,GACd/B,QAASJ,KAAK+B,sBACd7B,KAAK,cAEP,cAAC,EAAD,CAASS,SAAUX,KAAKwB,MAAMb,cAGhC,sBAAKb,UAAU,SAAf,UACA,0DACA,8BAAG,mBAAGsB,KAAK,kCAAR,0BAAH,0B,GA9DyBf,cAqE3BoB,EAAW,qmCCvEjBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae1a0e8d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Toolbar extends Component {\r\n  static propTypes = {\r\n    text: PropTypes.string,\r\n    icon: PropTypes.object,\r\n    onClick: PropTypes.func\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='toolbar'>\r\n        <i className='fa fa-free-code-camp' title='no-stack-dub-sack' />\r\n        {this.props.text}\r\n        <i className={this.props.icon} onClick={this.props.onClick} />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Editor extends Component {\r\n  render() {\r\n    return (\r\n      <textarea\r\n        id='editor'\r\n        onChange={this.props.onChange}\r\n        type='text'\r\n        value={this.props.markdown}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nconst marked = require('marked')\r\n\r\nexport default class Preview extends Component {\r\n  render() {\r\n    // Allows line breaks with return button\r\n    marked.setOptions({\r\n      breaks: true\r\n    });\r\n\r\n    // Inserts target=\"_blank\" into 'href' tags\r\n    const renderer = new marked.Renderer();\r\n    renderer.link = function(href, title, text) {\r\n      return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\r\n    };\r\n\r\n    return (\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: marked(this.props.markdown, { renderer: renderer })\r\n        }}  \r\n        id='preview'\r\n      />  \r\n    )  \r\n  }  \r\n}  \r\n","import React, { Component } from 'react'\nimport Toolbar from './components/Toolbar'\nimport Editor from './components/Editor'\nimport Preview from './components/Preview'\nimport './styles/App.scss'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markdown: placeholder,\n      editorMaximized: false,\n      previewMaximized: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditorMaximize = this.handleEditorMaximize.bind(this);\n    this.handlePreviewMaximize = this.handlePreviewMaximize.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      markdown: e.target.value\n    });\n  }\n\n  handleEditorMaximize() {\n    this.setState({\n      editorMaximized: !this.state.editorMaximized\n    });\n  }\n\n  handlePreviewMaximize() {\n    this.setState({\n      previewMaximized: !this.state.previewMaximized\n    });\n  }\n\n  render() {\n    const classes = this.state.editorMaximized\n      ? ['editorWrap maximized', 'previewWrap hide', 'fa fa-compress']\n      : this.state.previewMaximized\n        ? ['editorWrap hide', 'previewWrap maximized', 'fa fa-compress']\n        : ['editorWrap', 'previewWrap', 'fa fa-arrows-alt'];\n    \n    return (\n      <div>\n        <div className={classes[0]}>\n          <Toolbar\n            icon={classes[2]}\n            onClick={this.handleEditorMaximize}\n            text='Editor'\n          />\n          <Editor markdown={this.state.markdown} onChange={this.handleChange} />\n        </div>\n        <div className='converter' />\n        <div className={classes[1]}>\n          <Toolbar\n            icon={classes[2]}\n            onClick={this.handlePreviewMaximize}\n            text='Previewer'\n          />\n          <Preview markdown={this.state.markdown} />\n        </div>\n\n        <div className=\"footer\">\n        <p>Designed and developed by</p>\n        <p><a href=\"https://nadiemedicejose.web.app\">Jose Estrada</a> &copy; 2021</p>\n      </div>\n      </div>\n    )\n  }\n}\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}